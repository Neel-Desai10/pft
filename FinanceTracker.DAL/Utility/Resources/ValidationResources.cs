namespace FinanceTracker.DAL.Resources
{
    public static class ValidationResources
    {
        public const string InvalidUserStatus = "Invalid UserStatusId.";
        public const string RequiredFieldValidatingMessage = "This field is required.";
        public const string EmailId = "EmailId";
        public const string EmailExistMessage = "Email Id already exists.";
        public const string ConnectionString = "ConnectionStrings";
        public const string Authority = "1Authority";
        public const string DbConnection = "DbConnection";
        public const string MailSettings = "MailSettings";
        public const string CorsPolicy = "CorsPolicy";
        public const string TokenURL = "1Authority:AuthorityTokenUrl";
        public const string ClientID = "1Authority:AuthorityClientId";
        public const string AuthoritySecret = "1Authority:AuthoritySecret";
        public const string BaseUri = "1Authority:baseUri";
        public const string BasePut = "1Authority:basePut";
        public const string AdminMail = "MailSettings:AdminMail";
        public const string DeprecatedMessage = "This Constructor is Deprecated";
        public const string Appsettings = "appsettings.json";
        public const string UserClientName = "FinanceTracker";
        public const string FirstNameRegexMessage ="Please enter a valid First Name.";
        public const string LastNameRegexMessage ="Please enter a valid Last Name.";
        public const string LastNameMessage = "Please Enter a Valid Last Name";
        public const string FirstNameLengthMessage ="First name must be between 2-30 characters.";
        public const string LastNameLengthMessage ="Last name must be between 2-30 characters.";
        public const string LastNamesMessage ="Enter Last Name Between 2 to 30 Characters";
        public const string AddressMessage ="The Maximum Size Of Address Field Is 250 Characters.";
        public const string InvalidEmail ="Invalid email address.";
        public const string InvalidPhone ="Phone number is invalid";
        public const string InvalidPincode ="Enter a valid Pincode";
        public const string EmailLength ="Email ID must be between 1-50 characters.";
        public const string InvalidPassword ="Please enter a valid Password.";
        public const string PasswordLength ="Password must be between 8-25 characters.";
        public const string ServerError = "Internal server error";
        public const string InvalidStatus = "Invalid user status";
        public const string InvalidUser = "Invalid user";
        public const string AlreadyUpdateStatus = "User already Approved/Rejected";
        public const string RegistrationSuccess = "User registered successfully.";
        public const string AdminCreateUserRegistrationSuccess = "User has been created successfully.";
        public const string EmailAlreadyExist = "Email already exists.";
        public const string AuthoritySuccess = "Successfully Added To Authority.";
        public const string PendingSuccess = "List of pending user registrations retrieved successfully.";
        public const string ApprovedSuccess = "List of approved user registrations retrieved successfully.";
        public const string RejectedSuccess = "List of rejected user registrations retrieved successfully.";
        public const string RolesSuccess = "List of roles retrieved successfully.";
        public const string StatusSuccess = "List of user statuses retrieved successfully.";
        public const string NoContent = "No Content - Request processed successfully but no content returned.";
        public const string InternalServer = "Internal Server Error - Something went wrong on the server side.";
        public const string BadRequest = "Bad Request - Invalid input data.";
        public const string NotFound = "Not Found - User not found.";
        public const string serverError = "Internal server error";
        public const string DescriptionRegexMessage = "Please enter a valid description";
        public const string DescriptionLengthMessage = "Description must be between 0-30 characters";
        public const string AmountRegexMessage = "Please enter a valid number: Max 8 digits before and 2 digits after the decimal";
        public const string AmountLengthMessage = "Amount must be between 1-10 digits";
        public const string InvalidUserId="Invalid user ID.";
        public const string LogInvalidUserId="Invalid user ID: {UserId}";
        public const string PaginationValidation="Invalid pagination parameters. PageNumber and PageSize must be greater than zero.";
        public const string LogPaginationValidation="Invalid pagination parameters: PageNumber={PageNumber}, PageSize={PageSize}";
        public const string NoTransactionData="No Transaction Found.";
        public const string LogNoTransactionData="No transaction data available for user ID: {UserId}";
        public const string LogTransactionDataSuccess="Transaction data retrieved successfully for user ID: {UserId}";
        public const string ExceptionError="An error occurred while processing your request.";
        public const string LogExceptionError="An error occurred while getting user transactions for user ID: {UserId}";
        public const string UserApproved = "Users are Approved";
        public const string UserRejected = "Users are Rejected";
        public const string ApprovedUserError = "User once Rejected that cannot be Approved.";
        public const string RejectedUserError = "Invalid user status provided for user.";
        public const string NoUserSelected = "No users were selected for approval or rejection.";
        public const string ValidaionSucessfull = "Validation passed";
        public const string UpdateUserSuccessful = "Details successfully saved";
        public const string InvalidUserID = "Invalid User Id";
        public const string UpdateAuthority = "User details not updated in authority";
        public const string AuthoritySuccessMessage="Put request to {requestUri} succeeded with response code {statusCode} and response content {responseContent}";
        public const string AuthorityFailureMessage="Put request to {requestUri} failed with response code {statusCode}. Error {Content}";
        public const string ContentType="application/json";
        public const string QueryParameter="subjectId";
        public const string AddParameter="Authorization";
        public const string ResponseStatus="Success";
        public const string ErrorMessage="User Details not Updated";
        public const string UserIs = "User is ";
        public const string UsersAre = "Users are ";
        public const string Approved = "Approved.";
        public const string Rejected = "Rejected.";
        public const string SelectedUser = "Selected Users are ";
        public const string UpdateUserAccountStatusSuccess = "User Account Status Updated Successfully";
        public const string AuthorityUpdateSuccess = "User Account Status Update Successfully On Authority";
        public const string AuthorityUpdateFailed = "User Account Status Update Failed On Authority";
        public const string AuthoritySuccessLog = "Put request to {requestUri} succeeded with response code {statusCode} and response content {responseContent}";
        public const string AuthorityFailedLog = "Put request to {requestUri} failed with response code {statusCode}. Error {Content}";        
        public const string NotificationRequired = "NotificationId field cannot be empty or null";
        public const string NotificationRange = "Please Enter a Valid  NotificationId";
        public const string AuthorityPostSuccess ="POST request to {requestUri} succeeded with response code {statusCode} and response content {responseContent}";
        public const string AuthorityPostFailed = "POST request to {requestUri} failed with response code {statusCode}.";
        public const string UppercaseChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        public const string LowercaseChars = "abcdefghijklmnopqrstuvwxyz";
        public const string Digits = "0123456789";
        public const string SpecialChars = "@$!_&*#";
        public const string RegisterUrl = "/api/userregistration";
        public const string EmptyString = "";
        public const string Employee = "Employee";
        public const string SubjectId = "subjectId";
        public const string HangfireApproveMessage = "Approval Mail sent successfully";
        public const string TokenGenerateError = "Token generation error";
        public const string ConfirmPasswordValidation = "New password and confirm password must be same";
        public const string ChangePasswordError = "An error occurred while changing password";
        public const string PasswordChangedSuccessfully = "Password Updated Successfully";
        public const string ErrorWhileChangingSamePassword = "Password already exists please try another password";
        public const string OldNewPasswordMustNotMatch = "Old password and new password must not be same";
        public const string PasswordMismatch = "Old password does not match";
        public const string RegistrationFailed ="User Registration Failed";
        public const string IsEnabled ="isEnable";
        public const string NotificationUpdated = "Notification status updated successfully";
        public const string ReminderDataSuccess = "Reminder Data Retrieved successfully";
        public const string TitleLength = "Enter Title Between 2 to 50 Characters";
        public const string NoteLength = "Enter Notes Between 0 to 100 Characters";
        public const string ReminderUpdatedSuccessfully = "Reminder Updated Successfully";
        public const string ErrorWhileUpdatingReminder = "Failed to Update Reminder";
        public const string ReminderDeletedSuccessfully = "Deleted Successfully";
        public const string ErrorWhileDeletingReminder = "Failed to Delete Reminder";
        public const string ReminderIdNotFound = "Reminder Not Found";
        public const string ReminderCannotSet = "Reminder can not be set in the past.";
        public const string ReminderCannotDelete = "Cannot delete reminder as the reminder date and time have already passed.";
        public const string Authorization = "Authorization";
        public const string Bearer = "Bearer ";
        public const string Role = "role";
        public const string Subject = "sub";
        public const string NullToken = "An authentication token is mandatory.";
         public const string AdminCanNotDeActive="Admin can not be DeActive";
    }
}